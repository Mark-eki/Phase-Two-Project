<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='MovieAnalysistableau' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cleaned data' inline='true' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned data' name='textscan.0u412ts0zrkwda1cdylww1vkxx4u'>
            <connection class='textscan' directory='C:/Users/HP/Desktop/p2/dsc-phase-2-project-v3' filename='cleaned data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='cleaned_data' name='textscan.15ue25s1q5r8od15se4g40lyc2q7'>
            <connection class='textscan' directory='C:/Users/HP/Desktop/p2/dsc-phase-2-project-v3' filename='cleaned_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15ue25s1q5r8od15se4g40lyc2q7' name='cleaned_data.csv' table='[cleaned_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='original_language' ordinal='1' />
            <column datatype='string' name='movie' ordinal='2' />
            <column datatype='real' name='production_budget' ordinal='3' />
            <column datatype='real' name='worldwide_gross' ordinal='4' />
            <column datatype='string' name='studio' ordinal='5' />
            <column datatype='string' name='movie_id' ordinal='6' />
            <column datatype='string' name='original_title' ordinal='7' />
            <column datatype='integer' name='start_year' ordinal='8' />
            <column datatype='real' name='runtime_minutes' ordinal='9' />
            <column datatype='string' name='genres' ordinal='10' />
            <column datatype='real' name='averagerating' ordinal='11' />
            <column datatype='integer' name='numvotes' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_language</remote-name>
            <remote-type>129</remote-type>
            <local-name>[original_language]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>original_language</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>movie</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production_budget</remote-name>
            <remote-type>5</remote-type>
            <local-name>[production_budget]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>production_budget</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>worldwide_gross</remote-name>
            <remote-type>5</remote-type>
            <local-name>[worldwide_gross]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>worldwide_gross</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>studio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[studio]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>studio</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>movie_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[movie_id]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>movie_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[original_title]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>original_title</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start_year]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>start_year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtime_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[runtime_minutes]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>runtime_minutes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genres</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genres]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>genres</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averagerating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averagerating]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>averagerating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numvotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numvotes]</local-name>
            <parent-name>[cleaned_data.csv]</parent-name>
            <remote-alias>numvotes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='cleaned_data.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]' role='measure' type='quantitative' />
      <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
      <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
      <column caption='Movie' datatype='string' name='[movie]' role='dimension' type='nominal' />
      <column caption='Movie Id' datatype='string' name='[movie_id]' role='dimension' type='nominal' />
      <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
      <column caption='Original Language' datatype='string' name='[original_language]' role='dimension' type='nominal' />
      <column caption='Original Title' datatype='string' name='[original_title]' role='dimension' type='nominal' />
      <column caption='Production Budget' datatype='real' name='[production_budget]' role='measure' type='quantitative' />
      <column caption='Runtime Minutes' datatype='real' name='[runtime_minutes]' role='measure' type='quantitative' />
      <column caption='Start Year' datatype='integer' name='[start_year]' role='dimension' type='quantitative' />
      <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
      <column caption='Worldwide Gross' datatype='real' name='[worldwide_gross]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HP/AppData/Local/Temp/TableauTemp/#TableauTemp_1fsqobh145u7ag19iubq91ageqd0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/05/2025 09:52:42 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1794</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>original_language</remote-name>
              <remote-type>129</remote-type>
              <local-name>[original_language]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>original_language</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>movie</remote-name>
              <remote-type>129</remote-type>
              <local-name>[movie]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>movie</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>934</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>production_budget</remote-name>
              <remote-type>5</remote-type>
              <local-name>[production_budget]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>production_budget</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>worldwide_gross</remote-name>
              <remote-type>5</remote-type>
              <local-name>[worldwide_gross]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>worldwide_gross</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>941</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>studio</remote-name>
              <remote-type>129</remote-type>
              <local-name>[studio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>studio</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>movie_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[movie_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>movie_id</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1130</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>original_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[original_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>original_title</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>987</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_year</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runtime_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[runtime_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>runtime_minutes</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genres</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genres]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genres</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>averagerating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[averagerating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>averagerating</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>numvotes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[numvotes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>numvotes</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1043</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='cleaned_data.csv' id='cleaned_data.csv_62A8AFC897E449468D3B433D8D0AE4BE'>
            <properties context=''>
              <relation connection='textscan.15ue25s1q5r8od15se4g40lyc2q7' name='cleaned_data.csv' table='[cleaned_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='original_language' ordinal='1' />
                  <column datatype='string' name='movie' ordinal='2' />
                  <column datatype='real' name='production_budget' ordinal='3' />
                  <column datatype='real' name='worldwide_gross' ordinal='4' />
                  <column datatype='string' name='studio' ordinal='5' />
                  <column datatype='string' name='movie_id' ordinal='6' />
                  <column datatype='string' name='original_title' ordinal='7' />
                  <column datatype='integer' name='start_year' ordinal='8' />
                  <column datatype='real' name='runtime_minutes' ordinal='9' />
                  <column datatype='string' name='genres' ordinal='10' />
                  <column datatype='real' name='averagerating' ordinal='11' />
                  <column datatype='integer' name='numvotes' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Genres vs number of movies'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#202bff' fontsize='12'>Genre vs Number of Movies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned data' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' />
          </datasources>
          <datasource-dependencies datasource='federated.0qw6nn31jn6fho17iw4da11ndh3q'>
            <column-instance column='[numvotes]' derivation='Count' name='[cnt:numvotes:qk]' pivot='key' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([numvotes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:genres:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[cnt:numvotes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#edc948' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' value='-90' />
            <format attr='color' value='#f28e2b' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#addee8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[cnt:numvotes:qk]</rows>
        <cols>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</cols>
      </table>
      <simple-id uuid='{B89D1C38-9661-4CD7-A979-DC646BD08FA8}' />
    </worksheet>
    <worksheet name='Genres vs ratings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#e15759' fontsize='10'>Genre vs Ratings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned data' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' />
          </datasources>
          <datasource-dependencies datasource='federated.0qw6nn31jn6fho17iw4da11ndh3q'>
            <column caption='Averagerating' datatype='real' name='[averagerating]' role='measure' type='quantitative' />
            <column-instance column='[averagerating]' derivation='Avg' name='[avg:averagerating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[numvotes]' derivation='Avg' name='[avg:numvotes:qk]' pivot='key' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([averagerating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:genres:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:averagerating:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#59a14f' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='color' scope='rows' value='#7e0de1' />
            <format attr='background-color' scope='rows' value='#7e0de1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:numvotes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</rows>
        <cols>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:averagerating:qk]</cols>
      </table>
      <simple-id uuid='{6BCCF0C2-8D3C-4DC8-B323-C828526C7711}' />
    </worksheet>
    <worksheet name='Genres vs worldwide gross'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Genres vs avg Worldwide Gross</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned data' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' />
          </datasources>
          <datasource-dependencies datasource='federated.0qw6nn31jn6fho17iw4da11ndh3q'>
            <column-instance column='[worldwide_gross]' derivation='Avg' name='[avg:worldwide_gross:qk]' pivot='key' type='quantitative' />
            <column caption='Genres' datatype='string' name='[genres]' role='dimension' type='nominal' />
            <column-instance column='[genres]' derivation='None' name='[none:genres:nk]' pivot='key' type='nominal' />
            <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
            <column-instance column='[numvotes]' derivation='Sum' name='[sum:numvotes:qk]' pivot='key' type='quantitative' />
            <column caption='Worldwide Gross' datatype='real' name='[worldwide_gross]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([worldwide_gross])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:genres:nk]' member='%null%' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Animation&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Biography&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Adventure,Western&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Animation,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Biography,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Biography,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Biography,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Comedy,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Crime,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Drama,Western&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Family,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Fantasy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Fantasy,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Fantasy,Western&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Horror,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Horror,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Mystery,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Mystery,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Sci-Fi,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Action,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Animation,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Animation,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Animation,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Biography,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Biography,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Comedy,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Crime,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Drama,Western&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Family,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Family,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Adventure,Mystery,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Animation&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Animation,Comedy,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Animation,Comedy,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Animation,Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Comedy,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Comedy,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Crime,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Documentary&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Documentary,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Musical&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Biography,Drama,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Crime,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Crime,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Crime,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Documentary&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Musical&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Family,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Family,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Fantasy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Fantasy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Horror,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Music,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Musical&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Mystery,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Romance,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Comedy,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Documentary&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Documentary,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Drama,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Horror,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Mystery,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Crime,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,Drama,News&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,News&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Documentary,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Family,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Family,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Fantasy&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Fantasy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Fantasy,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Fantasy,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Fantasy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,History&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,History,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,History,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,History,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Horror,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Horror,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Horror,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Music&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Music,Musical&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Music,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Mystery,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Mystery,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Mystery,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Romance,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Romance,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Romance,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Sci-Fi,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Thriller,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,War&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Drama,Western&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Family&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Fantasy,Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Fantasy,Horror,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Fantasy,Horror,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Fantasy,Romance&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Music,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Mystery&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Mystery,Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Mystery,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Romance,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Sci-Fi,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Horror,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Mystery,Sci-Fi,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Mystery,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Romance,Sci-Fi,Thriller&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Sci-Fi&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Sport&quot;' />
                  <groupfilter function='member' level='[none:genres:nk]' member='&quot;Thriller&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:worldwide_gross:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' value='103' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#e15759' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[sum:numvotes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</rows>
        <cols>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:worldwide_gross:qk]</cols>
      </table>
      <simple-id uuid='{237E84BA-49DF-4603-BDA0-4A5E3F0D622D}' />
    </worksheet>
    <worksheet name='Language vs number of movies'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#76b7b2' fontsize='10'>Language vs number of movies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned data' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' />
          </datasources>
          <datasource-dependencies datasource='federated.0qw6nn31jn6fho17iw4da11ndh3q'>
            <column-instance column='[numvotes]' derivation='Count' name='[cnt:numvotes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[numvotes]' derivation='CountD' name='[ctd:numvotes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[original_language]' derivation='None' name='[none:original_language:nk]' pivot='key' type='nominal' />
            <column caption='Numvotes' datatype='integer' name='[numvotes]' role='measure' type='quantitative' />
            <column caption='Original Language' datatype='string' name='[original_language]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:original_language:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([numvotes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:original_language:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:original_language:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[ctd:numvotes:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:original_language:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#b07aa1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[cnt:numvotes:qk]' value='#202bff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fff0fc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#edc948' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[cnt:numvotes:qk]</rows>
        <cols>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:original_language:nk]</cols>
      </table>
      <simple-id uuid='{017C1831-0978-4BC7-8EF6-9C50C4E39AA9}' />
    </worksheet>
    <worksheet name='Studio vs worldwide gross'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Studio vs worldwide gross</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned data' name='federated.0qw6nn31jn6fho17iw4da11ndh3q' />
          </datasources>
          <datasource-dependencies datasource='federated.0qw6nn31jn6fho17iw4da11ndh3q'>
            <column-instance column='[worldwide_gross]' derivation='Avg' name='[avg:worldwide_gross:qk]' pivot='key' type='quantitative' />
            <column-instance column='[studio]' derivation='None' name='[none:studio:nk]' pivot='key' type='nominal' />
            <column caption='Studio' datatype='string' name='[studio]' role='dimension' type='nominal' />
            <column caption='Worldwide Gross' datatype='real' name='[worldwide_gross]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:studio:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([worldwide_gross])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:studio:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:studio:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:worldwide_gross:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:studio:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:studio:nk]</rows>
        <cols>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:worldwide_gross:qk]</cols>
      </table>
      <simple-id uuid='{675A83A7-180B-49DB-83A9-230B6DDDA7A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='movie analysis visualizations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='14'>MOVIE ANALYSIS VISUALIZATIONS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#52ff60' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='wrap' value='on' />
        </style-rule>
      </style>
      <size maxheight='860' maxwidth='1320' minheight='560' minwidth='1320' sizing-mode='range' />
      <zones>
        <zone fixed-size='50' h='8204' id='14' is-fixed='true' type-v2='title' w='97538' x='1231' y='1132'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone fixed-size='597' h='84441' id='5' is-fixed='true' type-v2='layout-basic' w='97538' x='1231' y='9336'>
          <zone h='42203' id='3' name='Genres vs number of movies' w='52027' x='1231' y='9336'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='42238' id='10' name='Genres vs worldwide gross' w='52027' x='1231' y='51539'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='42221' id='9' name='Language vs number of movies' w='45511' x='53258' y='51556'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='42220' id='19' name='Genres vs ratings' w='45511' x='53258' y='9336'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='14'>MOVIE ANALYSIS VISUALIZATIONS</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97858' id='24' param='vert' type-v2='layout-flow' w='98788' x='606' y='1071'>
                <zone fixed-size='50' h='8204' id='14' type-v2='title' w='97538' x='1231' y='1132'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42203' id='3' is-fixed='true' name='Genres vs number of movies' w='52027' x='1231' y='9336'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42220' id='19' is-fixed='true' name='Genres vs ratings' w='45511' x='53258' y='9336'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42238' id='10' is-fixed='true' name='Genres vs worldwide gross' w='52027' x='1231' y='51539'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42221' id='9' is-fixed='true' name='Language vs number of movies' w='45511' x='53258' y='51556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CEED2C7E-FBE1-427C-8D21-1641FD56BB92}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Genres vs number of movies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[:Measure Names]</field>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14221F49-145F-49F1-95A6-5B734AF08CB0}' />
    </window>
    <window class='worksheet' name='Language vs number of movies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:original_language:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F9D0D6B-4D3D-4667-9B0C-8FED85CB609B}' />
    </window>
    <window class='worksheet' name='Genres vs worldwide gross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' type='filter' />
            <card param='[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD1D597F-C501-4E23-B4A2-63EB226DB7FA}' />
    </window>
    <window class='worksheet' name='Studio vs worldwide gross'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:studio:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93462BE9-B3D7-4D41-BADB-903EF53865CA}' />
    </window>
    <window class='worksheet' name='Genres vs ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[avg:numvotes:qk]</field>
            <field>[federated.0qw6nn31jn6fho17iw4da11ndh3q].[none:genres:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8648F01-7D9B-4B5D-86AE-373B4C037CE8}' />
    </window>
    <window class='dashboard' maximized='true' name='movie analysis visualizations'>
      <viewpoints>
        <viewpoint name='Genres vs number of movies'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Genres vs ratings' />
        <viewpoint name='Genres vs worldwide gross' />
        <viewpoint name='Language vs number of movies'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{D5D1F5FB-D8CF-4B01-BD35-1151EE2CD13C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Genres vs number of movies' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Genres vs ratings' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9V4xcR56v+R2T7qTPrMzK8p7Fovfei6TEdlJ3T/cMZu4Cg31ZYN3LYoEF
      FljM+y4WuLj7sNjtO3Nnu2e61UZSy5CUaEQnelMkiyyyqljem/Q+j9mHLDqJpihVkZSYH1AP
      5DknIs7J84+IE/GLXwiGYRiUKPGGIr7qApQo8SopBUCJN5pSAJR4oykFQIk3mlIAlHijKQVA
      iTeaUgCUeKMpBUCJN5pSAJR4oykFQIk3mlIAlHijKQVAiTeaUgCUeKMpBUCJN5pSAJR4oykF
      QIk3mlIAlHijKQXA95B8Pv9K8s3lcj+4fEsB8D3kVa1i1XX9B5evvGApv2x0lVgkTEFy4PMo
      T4/s9BR3ZiQW1/heZunmlWQmz//8fx9/6fnqhoEoCD+ofH8wAVCIj3Lo0Kek1Qbe/fsD+M1P
      OTE2yJnb5gUJgFxkkM5hgSXLa3ha9vOBphsMTMQWMIc3hx9MF2hmYgR79WYavTMMTyQeO2YY
      BoVchlQqRV7VwQAw0DWNR3sThqGjafqDa/LpBDMzETKFh+cZuo6uG2iFLLFwhFSugGEYGLpO
      JjLIzc5hcqqKqmkP/l9/JBND19F0AwwDXdeKxwydfC5DQTMAA0PLE4vMEE1kHru2xPzzg2kB
      xkeGCNTsJeiY4u7IOCtrnLNHNCbuXuTk9SGsNhvEh0k5NwIG3e1nsNRvot5vAQziY930xBXW
      Lq4m3HeFU9eGsdhMZFSFbXu2UO6wMNN/gxs948TTKfIZlYLJzqadu/DlBjl15ir9wwKffjSC
      yVXN29vXoo5dZ9S6hKWVCgCZkXYuJ2vZsdjHUMc1Mv465LF2LvWEWbnzXVrcKS6dOs20bkHM
      pXAv2saWpSGkV/Vgf+D8MFqA3BD3hq3UVXspr6xiYqif4jiJQXKgnS+uTLPl7R+zf99e9m1Z
      ic0sAwJmPc3Nzj40w8Aw4N6tDrKYUKO9HL8wzvp977B371tsqs1z7GwXKpCcGqAnYmHHnnf4
      6c/fZW2lSNe9cVyhZjZvXE5N/Ur2HTjAgW2rsFtk0lP9jEQfjtrkw/10jSfA0JkZ6uHqhZN0
      Rjy89c6PaQma6b92iqhnBfveeot9b+8icfMId8ezlNqBheEHEQCx3k5SFS0EbAL2QIjy1Dh9
      ScDQGLg3QtWK1dR47NhsNhSbBVEUAIFgTT2xqRFU3QAjwdhUjpoKP+HRAYyKBqpdVsxmK1Vt
      izENDTBdADBTXlmB22XHZrXgcrqQRB1JNmOzWpBNFhS7Hbtinc3nWWRJGyH27F5H0OPAJCUZ
      7EvS2FqPzWLGopTRUOVidHxqwZ/hm8r3vwukJbl5a4h4ZITf//YyYFBIjBJtH6J5S4iMKuJ1
      Wp94qVJWRW2unTuxAi3Ry8TL1hNySUz2Zhm6/AW/6Tk3e6aB1VWLoM134R00LWnELt8PlCzh
      8RFuvv/PnJn9ZQzdwpKd3/+f6XXle/9k8/EoQ5qXX//dATyWYk9ZT/fw5486iK2vQDFpDEdS
      GHVlQPHj835/QpCdrFzq4rOOPgpTk7Tu3oFZEHA4PQSXbuMf3lmHIAg8+AIWYOBZhRFExPt5
      3B+2EwCM2e9ug69/0z4+uuciVFdO89a/Z1WFmUezLrEwfO8DYGa8B4unAa/dhmm2Q2fIrVS4
      LjA0mWbx8iVcP3iKE7kluEw66ZHbZFgxe7WAe+lGlP/0r5yuXM//4Cs+Dk/DUpo6PuMvX+Ro
      DChouQSJlIP1e9c+syxmfxWmxDEunpNxuL0sbanH6Q0yfPU8V7Ih9EyMgVtdGM2rn5KClSVr
      2vjs2MekWxuxSRrRSIpQ60ravsfzFq8zwvfdHDcdmSCBk6BX4UFlahhEp8bQFT8+u0xkbJD+
      8TBIFsp8bnSLm7qg6/7JjPVcJ2qpfewlK6TD9PUOkypoiLKVYE0dIY9CJjpFQrcR9DkQMMgm
      IiQ1C2UeO4auER7rZWgyCYqPtsZqLEKO3u4eohkVk81FmcuEag1Q47MRm5pAVTz4HQ+7aIaW
      Z2p0kLHpBLog4vAEqa4uxyqLD+5vKhLnf/xPR17G432cR1u2H0i+3/sAeBPJ5XJYLJaXnm8m
      k8Fms/2g8v1BjAKVKPFtKQVAiTea1/gj2CA+M0HB5Mbv+nbNn65mSaQ1HE470jx1IQ1NJZmI
      kcoWEAQJu9uDYjHx3CH/eSSZyfO//D8nXl6Gs+iGjii8/DpzIfN9fQNAm+bgb/5fBut38D/9
      7c7nSgHS4SHuTRosba198DIWovc4cSHB7v2bcJnmo1AGvdeOc7k3itViRS9kSMt+du/aRqXn
      yXMN344cPe03cbesI2D/5lFNN+gdi8xjfm8ur2kAGKTutaOt+RHLx7vpTem02B+pAQyDQj5L
      XgOL1YokGCRmBrlxR2dRUyWSICDJEmZvC2/t0lHuTyoZOvlMklTOwO50YJak2bF2Hd0AwdDI
      pFLosoLdZvqmBDczwOXraTb+6mfUOi0YWp5oLIVik2bFbQagk04lMWQbdpv5kTQM8pkUyUwB
      xenCYpIQYFYwZyCIAoZWIK8LmKQM3dcvU1OxCq9FQBRFBFHgFYy//OB5PQNAz3DrxhRLdu+i
      8l4vp29P07Q+iAgYuspI5yUu3Z3AJIOgVLJ2sZtTZ9vpm9D5RJtCEsvY9fMdONUI924lWbyh
      CQsao7fOc/bOBDaLRFazs3XfTirsJhITPbTfGSYVi5POpcloNpZv283KGs/XCqaR13RkaTY4
      ZAt+/+xoTD7MxRPXiEs58pk8iViWurW72by4HMHQmOlt58S1AaxWE1nNxMrN22gOOihkx7h+
      LUJjo4Vzp85TCC6lTujn1uAow0c/pstmpWndBlbUlr3sX+GN4LUMgGx4lDv4+bVHRl68nNxf
      rxFduR+fWSA5cZuT12fYsX83fkVGLRQwW21sXLuETKfOW3vXIwkydkBVYwz0TNO0oRFt5AYn
      OhLsPPAOAQtE+y5y5IvLvPezzWSio3T0xPjlL9/CYZGJ9pznVNfANwPAWs/6tuscfP8PtK1c
      TW1lOVUhP7IAqEn67g6z7O9/TrPdjJYY4vDBo3QF/pZaY5Aj5/vZcmA/5XYTkYHrHD5+jqq/
      3QeFMLcvnGdgtJzWTe/QUOZEMioY6hmleuteWnwiZtt8dq9KPMprOQo0Mz6MwxfCLIJkr8dv
      GWcynAFgsucWnrYNVJW5URQ7LrcHq8WCXbFislhxOl24XMrXvhk0RvsGKWtdRrVbwWJVKF+8
      nlCui/FEcRrEU1FNudeFXVHwelxPnncRJFq3/JRf7l+PEe7n9KG/8NmJ6yQKxTREyYHP78Jm
      teIItLC8ycLwRJTI5DC2UAuVXicWi5VQ02Lq1WkG0gAGiZRK65ZdLK8tw6FYsNntWE0yisOF
      y+XAapJL3Z8F4jVsATQGO28wMO3g30ZuAAaJ6QjZoXEWhxrJpNNYApYXjFyDbEbD5HnkdgUb
      spwhnc7jfPqF30CQTPirF7G9qhmtkOPkh7/nel8F26q/ea4sm9B1AzWfQ5BND19iyYRiThCL
      A3YRf1U9NWWOF7qjEvPD6xcA+XFG4hX8/B9+RqW1+Mqkhq7x4Y0RtPWNeMsCdE5Oo7a6kR+r
      FoVnzJZLeP0K3Ynkw/8qTBFLemh0WyA+x7LpOrogIAoCgiAim6yUeVxMPcmlwUgxMhTBv8WJ
      kvOgTsTQDQNJEDCyCcYTblb4gSwUP28fLbyA8DLHVd9gXrMA0Jm+fZVs0xpqnJYHY/emuhaq
      z3zGndhWWto2Yf3rIb48PU3AKaPqJpqWrcDhrUSInuDiNQVFtNOyetEjNydQuWQN9r8e47Ce
      oMYNI3dvYVq+gyoFpp9Romx8hMNfXGXTO/sJ5fp5/0gH5TXVeO1m1HSEnriVnZvLgTHUQpjb
      V64xJepM999lxr2KdystmHMtlN34nKPnZGo9FsZ7b5NvXkqdGbLZJ+Vqpzxk58b5k+Sq/Phr
      66j2O0vdoAXgNdMC6SSnRkhZQpQ/NnCvEx0bRHXVUqZAOjpJ78AIGRWc3goaGiqxCCqRsQF6
      RyMIkpvFq1uwqkkmx/OUVfuQgUx0lO6ufsIFAa+vgtaWWqyySC45zVRKprq8+NGrpaOMpwWq
      ylxM3DrGwTs2fv2zzdhlnenRQUYnwuQ0EE0WqhtaCLitiOlB/v03x6jYsQqXpiHb/DQ11+Aw
      y4BBITnNnbu9RDIF3L4KGhrrcFlltEKc8bEswergAzUrQC45zb2eAdKaiVBDI1U+x0MxXDjO
      f/cfP39Jv8kPm9csAF4z9AzXTp8lsGYP1c7n1L/pQd7/L5fY9t/+kqoFLlZJDDd/vGZdoNcM
      QaZl7Vbsjjl0PiSFmuYqXv7rUeK7UGoBvoeUWoD5Y04tgFbIkkgkyWsGssmKy+VAfuIohU4m
      mUSwOLCaFmCKQcsTSyRRNQMEEYtNQbGaX4lb2askmcnzv/7nky89X13XEcVXIIZbwHyfGwBG
      bpozX5xgNA1Wi4RRKLBkz69Y7H/S2TlunD6KfeUBllUuQMRGevnDxxeoDPgoZDLkDQi1rGPz
      qkYsr+WU3tMxdI2eux14qxdT5nyx2lzTDbqHwwtUsjeLZwaAoaa4cvwoqeA6frqqHsUsomaS
      aKZZEZdhFBeN6xp51cBssbBi+z5Ea9FoytCLi8E1NUcmo2G1K5hEg1w2Q16XsCtWpNmWxDA0
      sskUOUPC4VCe3MIYOlKglR/9aD2amiednOHSlyc4LcjsXlVTHGM3dPKZNOmCgd1uxyw/jAzD
      0Cnkc2i6gNlSHGbVZ+9BEASgKGgTBLFYfqPo1JbPpChgQrFZEQyVTCoNZgXFYirOPRgGulYg
      lUojmBUUa1Er9OAZYZDLpMkjY7dZi/mqBe52XKXRUYdXkREEcQ42KiXmm2cGQDY2SVfEzP6d
      9TgsxVPNSnEtra4muH75NjWLGrh5+ktmLM385J21TPXfQKrbSpVTZez2BW6OZylk4sTDScxV
      TdTLcUajSeKJPLVrdrFjaSV6IcPdq1/RPZnHJBSQfYvYurEN5UkaaEFEkiQkyYbZUs2mbWv4
      8NQtckurUMwigzdOcbUngmwRUQ0nW/fuJmgTwCjQd/UM1wfjSBKYy1rYs7aGux2D1K9qwykJ
      QJq7527iXrOJkJzj+uXTzERyJDJp0lmDqsYG1OgE8WSarGBn/fZdtJQ70HJhzhw9RUKwoBdU
      KpdvYV1TGYVUhKvtl0knC8TTKVI5g6olW9i5xE3HhfPcvTfERO4LuhxmalbsZG2jd75/3xLP
      4ZkBkE5PI1uC2M3ffBMNPUPXtXP0DY1TsWwLe6vLMAPTg53Iga1UOXUig53MWLfzzo5KzPoM
      n//+OPpPfsourw1j8hZ/uN7HlqWVRAevc3vKxq5dW7FLKle+/IyrXT62Li5/7lpohyuAot0l
      qmqYojc50ZFh9zv7CCoC0z0XOX70Aj85sIH03XOcHxJ5a88e7KJBVgXJyNHfM0ho+WKcEkCO
      4dt30JZtolzI09vVQ+X6H7Ohxkd6sovDX3Wz6+39lNnNDF4/QU/vOC3BGu6eOkK2die7W7wY
      qSG+OHiSQMUvCGQT3L7Vw4a3f8k6vx0t3Mv7FzrZufwtWlaso2ewn7p1W2kut2O2laQQr4Jn
      9pwNQ0NAnO0efJNMMot/2WY2tdXgcdqemFhZZQ0+txOH143X7CNUG8DldOB2OSCVIgNMDtzD
      29SGz2nDqjhpbKxiamRsTnaAgihiFiUMQ2Ok8wb+lVup9Tuw2uxULFqLq9BPNJai694ki1Yv
      p9ztxOF0UeZ1PX+VmOKiKliGy+nA5fLhL/cR9HlxOOw4HCYyySxkpukYsbJqaQV2mxVHWROL
      KlL0DhUNei2+cmpDxTS8Hg8mk4QhiFjtDqwWMw6nC4/Hg2IpjUi/Cp751C0WD6p+j4KqY5W+
      +Xo7yipprg585yn6ZHiMCzf+SO9XxeIYuop38c45XZtLJ4kLAk4JhpNZrFUPpcOCaEJHJZ/N
      kinouC0LYDGbzxON3eODf/kN9+euNUFmVYM6/3mVmHeeGQCKK4ircIm+cJoVFU9oooX7Qq7v
      hre8llVN23l7dcULqzwH77Rj9tVhM1sIhPx0TM+gNxfT0dQ4hZwZm9OBTxGJRLMQcn/n8j6G
      TaHcVcOqf/g1dV8bzElPJ558DUWbG+EVrK8t8TjPDADJ6mXXjhX85fAHjC9aQsghk46O4l58
      gEXz+L1WuWQN7Z8d40x+KV5FJBWJYJQ1sbGtipmOL/kqXM07O1uxAvnIEFeuSBhqjunRASJS
      NW+/vQJZEClbsRPl/YN8aayg0i0w0nUb26JtlDmt+Nat4KPDxzmZWIzHbJAV3KxuDRCQY1y6
      doMaRSQ+3cet8TAVL1J4c4DNG/18+sEnLG+rw4JGLDZNYNE2ap+1DlmQqPXaud5+hcK0F1dl
      M3VlIucOHsS0eA/rGr2k+i9w8KbAOz/d8EKS7RJzR/qnf/qnf3rqUUHA7CqnodJDLpUkp2qY
      HEHqqgNYTTIeXxk+rwfTIz0Lq9OL1+PFKgtYnT78fh8OiwhI2L1ePF5nsasgW/GV+fG7HVhs
      bqpCHtLJJLmChtVTTnN9NVYhztnPz+FZvZl6jwVBtuCyShQ0A1G2EKhrY9PaJbjMYrFGlRQq
      K71kolPMxAt46pawYWkdZlFAtvuoDTlJxRIUVHD5gwS8HoIVPtKRCHlNx13RxPIlrYSCXqyy
      iNvjw+/1YJJFBNmEx+PD5bAjCmCyOfD7/bgcNhR/DUGbSiqVRdUFPKFGGqu8mExmfL4yvG5X
      cbhXMuHzePE47QiigCdQjqmQJpXTUNwBvHYzsmzB4/fjsMoIoozV4cbvdTy2wCedyXHwwj1E
      USj9fce/11oKkRjr4vKozu61i191UV4rSlKI+eO1Hnqw+mrY7Huti1jie85r/XaZLDbmxc6n
      RImnMMcAMChkUyRzOg6HE9NTB9BVJgdGUapqcbzWofUcdJVUMkVe00EQMVmsKBbzayNVSGXy
      /G//cvql5/tGiuEAMHJ0fPEJJ8eT7Drw96yssT9l8DPLnfPnqf5xLY55ntg0tALd3XcJ1CzC
      a1/ITUiB7Bif/vEoYsCHlMuSM0QCNUvZvLEN+3x5LH4HVN3gzuCzFnKWmCtzCgA1MUN3wcPu
      FT5GhoZZWb3oEb/24naj+XwBQXo4+WPoOsasyKy4SYoxKzwTESiKx9LpDILZNisqe1w8ls9m
      yCOjWIuiNa2Q4/aNqyx11+KySkXx2H0xm3jfO/+bYjZRFNBVFdUQMJlkBEMnl0mTVQXsTxPd
      YSDaa9n3k13Y1TzpVJSbZ05y9ILIjza1YhKZzUfA0DUKmoHFbMIwdNR8HlU3kExmTI84zxmG
      gKHnyaTzmGwKZllEzWfI5A0URUF+DQLrTWROARCZGsPmDtBQa6f9/DAaDxec5+OjnDpxkZRg
      wiSpjE2lqAaio10Mpt0sb6kovgS5CJdvjrF83VJMmWm+OnGWpCGjqTq1q7axqs5LPjnDtRvX
      ySZzxFNJEnmBuuVb2bbIzs0L5+juHSSmHaHTbqJu1S5WBrO0d6ZYtrphdmPqKNfODNCyeRVS
      dICOCY02v8bZ8zew1K5l66oqxm5d5MZADFnQEZ1VbNq8Grf5CS+fICBKEibJhttiY/32zfzl
      8FWiq5oIKEnavxqgcWUll788wbR9EX+3t5W7585xdyqFJEFes7B+5w5qPFYSU/dov9ZLPJcl
      nUkj2Pw0BhXGJqaJp9P4aleyY8MSFFMpCF42cwgAnZG+e3hr9uIsEwglrtCTNFjsFDDyYc58
      fhypdRc7692IRoJz4VPFhEWDWx03aGkoRzGJhId7uDets44ct04fJ1+9nZ3NXvREP198cZKy
      v3kXbzrGzY5utr7zc1Z7bRSmuvnztTtsa9tB87JV3B0cpnXtRurKFCx2BfJjdHWHaX0QAAm6
      b/RQuWEVlugY168PEnZaqV6xhfoKP9mpHi53J9myeyceK9w5d4QLN33sXVP/XHdns8NDUNOY
      LhQIkKTz/Hl6x4NUr9jK6govIBFsXkH5EjOyCLHeC5y42MXf7V9BKjrE3WGVn7y7A7tF4sbx
      DxnKr2HHrhWI+STHT54ikmxB8S5w167EN3j+l0VhkoFhqKn2IZg9rGw1cf3WJDqQHu9nwFTP
      thU1eFwuXG43ttlZMYc/hD8XYzhVAGB4aISaujrEzCS3R22sXFaJQ7HhKm+lORijb6To2WPx
      V1BfEcDtclHm9yHLIogydqeruC2p24vP58M+B/FYJhJj0Za3WdZUiVOxEB3uxVS1hHKfA5vi
      oL6lgcjYYHHn9ucgSBIWSXog0EunMwRWbGNTaxV+lwKY8Za5IT1DT/ddRqMpkuNhcgBIeIPl
      lPm8uJwuPGVBKsqD+NwunC4XgqGSVwvPLUOJ+ec5b5FBrKeDrvAM0Q9+V4wWNUncuEx49Y8R
      MmncPs8ThyoFs5s1bQonOsZo2uxlZCLH8nVByPURjnTzl39+KB5TBRNrW+ZfPOaqbaOxzPrg
      gz0bm6T96sdMdhQFc4auIVetmpOaScukmRIMGqVigDv9VTTXBB4cV5PjfPnFMdKuehpDXizY
      Mb8mo0Ylns6zA0DP0tU1zaZ3f8WG6vubymmc/Ph9xqZTNNpsRGYiqE9KSBAJLF6B+OcbjJY7
      ifnWUO6QIK8Q8tSx7h/+hpqvTWamJp69zO9F3dK+binuLKti2YZGfraj5Wuucs9n4l4HSSWA
      z1oM24eryIokxnqJeJbxN3tWFiuKpImb9yZfLJMSL51nBkA+PsO9rJV9FR4slof1fFNtObcH
      Rli2sYW2qx/zyfFLtAQV1OwE96bTPLDJtNbQWHGSTz8dY/s/bsMsAOYQG9c4OfLXQyxfXIMZ
      jVh0hmDrFiqfURZBMlHrtNB+4xrZSg/uiiaqHS5syStcve7CK+SYGbvDuP70W/I1rED65AvO
      XEgQcFrIxqdIWGvYvrKR3PAlDt2W2L93LU5ATU1xq70dq5YnOjnMSFxhz4HtT5SFA1idHvLj
      nVy/JSOrWSb6bjCRrH3W430CGS4cPozcupu1DR5SA5c43AH7f7y+JIZbIJ4phtMBrz9IwOd6
      zHlBcblx2J14XB6CVeUUYjOk8wXM7kraWhsJ+D2YRQABh9OJ5KxiaVMAuagBxl5Wg9+UJZZI
      k1cNvBVN1Fd6MJnMeL1+vJ7Z/EQzHrcHr8uOIIp4g0FIx0lkCtg9QTwuD36vTCwSp2BIBBra
      WNpQQ1mZG6vFhs/vx+t8uMWKbLZTXRkgHYuSyuSQFB8tjfXYLXluHvuCTO0m2irsiKKMXZHI
      5woYiLhCTWzauIqAfXYNMCZcXj/+MvcDNzeT4qZMgZlwAk0wUde2kkX1lfjcdsxmBZ/fj9tp
      QxDAojgeLIIRBBGn20OZ14dZlhAFGbevrCiGEwRMNjdlPudjYrhUJsen57pnJdWlv+/09zqL
      4V4W+ZlBjt8Js3/rqtfTL/5rlMRw88f3WbAwb4iOIDvWln8vXv4S80spAADZYi09iDeUOXWB
      dDVPOp1B1Q1E2YzdbkN64kJ5nVwmi2CyPubHM2/oKql0GlUryh1MFisWs/zGOcOFYwn+j/cv
      vvR830gxnJGb4eyxkwxG88gmEUGHFft+RavvSWfnaP/yEMrKH7G8agH6bOEefvvXc5T7PBSy
      WXTZTPWitWxYUc+T1AyvM4au0dfTiadyET7Hi80Aq5rBrf6pBSrZm8VznOHStJ88RtSzgp/s
      bsJhESmkE6jmrznDGRoFFUxmC8u3733cGU4Q0NUc2ZyOxWZFFqGQy5LXRWxWy2POcLlMhoIh
      odgeOsY9XiAdOdjGTw+sQyvkSManuHTyNGcEmZ3Lqx44w6m5LJmCgU2xYZIed4ZTCwU0Q8Bk
      Ms3JGU4A8rkMKjJWqxlB18hlsyBbsZrlh85wukomXWz9rBb5G85w+Vy2mIbFXMxXK3D7+iUa
      lRrcNqnkDPeKeLYzXHySzmmJ/duacdmKp1ocHiyAriW4efUu1c113D57imlzIwf2rSY83IlY
      vYlKk8rE3cvcmsiRT0eJTiex1jZTLycYDceJJgrUr9nJ1rYQhpqhu/08XeMZRFSsgVY2r2vF
      9hRnOFmWkWUZi83O1u0pPjzdQW5xJYoZhju+4lrPDIJJxBA9bN6znYBVAKPAwPXz3BiMIopg
      CbSwc1U13Z1D1C1vxSEJQIbuix24Vm6gXM5x89o5wtEciVSCZFagpqkBLTpBJJYkJztZv207
      TQEHWj7CuS/PENUkDA2ql29idYOfQjrK9RvXyKQKxBIJEnmoWbqZba0ubl+6SHffCNPqMXqd
      ZqqXbWNV/de3ZS2x0DyzY5VJTT3dGU7LcOfKWU4fPws1q9m+fhFmYLKvg+k0gM5MXwdjahlr
      N+7gwIGNqLc7yFUuYfOOPbyzvoaOO72oQHjoJjdHJTZs38GuXTuQp65xrWeSuQzQOtwBbFqG
      mKpSmL7Jiesxlm7ZzVu7d7GiIs/xY5dJaTrTdy9wtq/Amq3b2LZtK8sbQ0hGlt67/WS0+xll
      Gbx5m5k8GFqens5OTKFFbN+9nx1r6+jp7KZm6Xp273+bJWUaXffGwcjTfeYoieBqdu7azY4N
      jdw7c4qhjIGaiXPzRieu+mVs272Pfeub6Lh9CyQb9YuXU11RRtuKtWzcuJGm8idsCV9iwXlm
      C6AbGgLSU53h0vEkwe2b2La0/Kl6mmB1A0G/AoDf7KeysRIfQMENyREywER/D57mdwi4i9sA
      tTRVcX5oFGNR8Lk6HUEsitR0Q2P01nU8K39GU3nR+6dmyXpu9x4iElvMQNc4i9bsodr/iJ9L
      7jmLShQ3tZUhvB4FSyFAWShKRTCAYoK4y0zPZBayU9wcNLNjV03RXtHeSmvoIveGkvh9YPGF
      aKwO4bJKIPgxm8IYgoTd5UGxWXF7fQQCpXneV8VznOHcqHrf053hAlUsqnn+S98mvK4AACAA
      SURBVPo8EjOjXLz+R/rOFoujq3ncrXNzhstnUsQRcEgwnMxge+TjWxDN6IJKPpMlXdBxLYQz
      XC5P5GvOcKohsKKupO78PvBcZzinepmBSIZloW820V8XhH1bfOW1rG7ewf5VoW/hDHcds7ca
      m9lCsNzH7ZkwenNo1hkugZo3Y3MUneGisRyEvnNxH8dmI+iqYc0//JraF3aGK330vmqe6wy3
      c8tSPjz8EVNLllHukMlERrC37KNlHr/XKhav5Nqh41zQl+O1SSQjM2jeetYvriJy+zTnwhXs
      274IC5CPjnLjxg0MNcfUSB+TWpB9b6/AJIiUrdiO5Y9HOC2tptIFo3c7MDdupMxlxbt6KR8d
      PcHZzBI8JoOM4GBFkx+/FOPazU5qFZHY1D1uv7AzXJBNa70c/vgQq9rqsAgascgU3qbN1DzH
      Ga7abaej4wZGzIuzvJ5qn8DFz79AXrSTNQ0e0gOX+fy2wN4Da0tiuAXiuc5wFk+IunKFRCRC
      KpMFi4+6mnKsJhmny4vP733MGc6iuHB7fdhkMCsefH4/TmvRGc7mcuHxuYurtyQzbp+PMq8T
      q+KlKuggMhMmmclicgRoaqjGJiY4e/g0yvKNNHitCJIZRdJIZ/Nohoi3ppXNG5bhsUizznAO
      KkJO4hOjTIQz2KsWs3llIxZRQHaUUROwEZmeIZUtoHgCBPxegiE30YkJUtk89mAdyxYvIlTu
      xyaLOJxu/H4fZllEkGScLg9ulxNRANmi4PUVBW72QA0+KU0kliCTU3EEG2iq9mEymXC7vfi9
      nuKwrijjcrvxuRwIooA3EMRIR4ilslhdQXwOMwYCTl8Ap03GwECyOCnzOx+rqVKZHJ+c7V6Y
      N+INY45iOOOxEZmFarofLYogCCTGurg0rLJ73ZLn7hPwSCpPL6thPLRcFx6uFXiQr/AdrH4f
      TfuZu9Z//bLH73ku5HI5TOaXv3wym8lgfQViuIXMd44SmLn/oN+Fr78AFm81m72mF8z7GWV9
      ygs+LwH9LYPn2+b9KuQfgiD84PItyaGfh66RSmcw25THZpXnfn2eZFpHcVgRMcglk2BzYPkO
      NiiJVJrzt8e+9fXflnyhgNn08r36FjLf7yyC1AtZrnz5IX0s5r19qx/R5BjkRzt4/2gnzZt2
      sGlR6FvUkAaFbAbDpPCEubh5Iz7RzZnTl4jmi1vCGlJRsmEJNLF3QyvXzp6nfvNO6j1za4bv
      XT1K3LeO1fUeyAxz+qsku95egY0CfedPwYYfsdj1/HSeRian8n99eOnbJ1DiAd85AAxdJZLP
      oY1c5254Ocv9s0kaee5c66CAwXQ4wbcbf8xx89N/Jrn+v2dH3Xct6dNxlDWw58dV6Ab0nvot
      081/x4ZKECQZi54mHosXbRLniCdYi1WZHRPV8sTi6dnvA51cPIahLcRdlPg2zIsMXpBctLSZ
      6L87RNvmBmQB1GSYrpSdJZU6UxSlBeGZOI6ysgd7+qq5BNGUgNdjIxObYGhomjwy/lCIcr+P
      bHSC6WSWzMQQQ6KA1eHF51HQc0lG+nvpn4hRXttCfXU5VpOIlo4SUa14TAVGhocR3CEcoobD
      48MiFwVuhVSMuGrB57Y9aJFEScZ6X+skS5gsCooyezCbBkMjFZumb7KLwak81c0tNFR4EYBY
      eBKL00cuOs74lErt0gbs7jLMpud9pBroap7w+BBd94aRfVW0NtXhspkR9Awz4Rwur43w2Agz
      qo22+lBp3mABmDeRtad2MUx1k8oXa8ro9BhWXyXuWf8ewchx++hHXBzOPLhmvOMEpzomyMbH
      OPLZ54wmcui5GF13OolmITLay8hMkrH+Tjo77zA0HkNVM1w9eYgbIxnqaysYuXmCk1f70XRI
      9ZzizyeucfbIQS51DpHIZLly7FM6RqLFDI0CPeeOcmkw+mLdsUKEm1fbGZjJo8gJvvjrUaYL
      xWr8zOfvc+3iaT79/CyDEzE0YOTGUa4MpZ+dpmEw3HGWYxe68NbWYYre47Nj50nmNUgP8Nmf
      vuTipeMcO3ediVj2RUpb4gWYt4VQVnsZbvkO47E07qDC5PAg3todyJPjszk5WLt9GX+5cI1V
      lZtxEKbzToLFB+owCn0Y1gBLly4j4LIiCsUOg7B8Myvv3iK5fv+DLlA63M1I3MPun23AaxEp
      d0h8cOoOmVXFE8Z6u1j/zj5+3lqBjIE/VsvJrgFW1fkw0jHuRmDtuhfc38nkYc223SwNuRD0
      OOmeY8R1gwBQCI9yy7aWv/nlL/DYTAjAXMxQdC3Pnb5hVm/7JYvKFfQqP+FPjjAYTbNUgVh4
      gGn28u57bShmaR52YivxJOYtAASTjeaQmSuD07R6bfQNwqr1PjIP3gYBa+UKAtqfGZ5eSW2+
      lwlXEzt9MlK+kqbyu5z6/FMEs5XmZRtY3lz+xMIV4uP03+vhyGfJ4vFCmv4RjYSmYQcqmtey
      srVy1vdHINTShq39JAPJVfiiw+jWCvyOF1xQLsiYTbMvoSggPbK5negsZ/PGVXiVFxulMPQk
      k739jOcO02EG0JjoHUZYnmOpAg5fLevXLsX+fVvp8z1jHpfCioQWLaJwqIcBu4lc/QoqrND7
      yBmCaKW1IcD1rl4K6iSNrWuLs8JmhRVb36E5lSKTCnP+9DF0+QBrGmx8veoTrQ4qq5vZsmMt
      ttljO0UzbquJFCDbrDzqMSvYylnTpnD5WjdNhR7KWvdhm0cnZslkwix/iyEqwYorVE7jpu1U
      OGcDaqeI4nJBdhpJsmEuvfwLzrwutBSdNTS7Rzj81RSLmoPfSFwQRKpbW8l0d9ARy1IbLK6r
      zKQnGR5JYnO4KAvVUeUzkUrnABMOp5WZmRnuj8FYnRVY9DEieRN+vx+P08Lk1BS6/rRRGpHA
      olUYA8e5PGBjcZ3nwURZeLCbvsn4nDbknm9EyUrQa2NoPIHX78fndaOGZ4jlSyrSl8l3bgEE
      UcJfVj47yiJT07aE25nsgzFzxRsgICoPzje56lhTc5Kz2jLKXMVug2RA39XP+fJEHsHQsFcs
      562WICDSuOUAtz74iN/etFLVup5tG5vZs2cdx09+yFVVBEOkdsVWWkQR2RmgWlO+UUaLI0iV
      UybvaSVwv/ejhfny0DEq9/2a+uDDcxV/NR7rIxeLMsFQOcoDwZOMpzKIMrt8MVBRi2J+PNQV
      TwifMvtoZTuh8vs1jYizvALDBIIgsXb7Ps6ePMW//usZJMHAHlrC3tp60OxU1pSVtod6Cbz8
      mWAjzZWPP0Jd/0s2Vj7aFzco5AsYCMimR50eDHRdR1U1JNnM/clYQ9coqBqibHrKJhcP0Qsp
      Th3+gtD6vSwOFXWVqf4zHOxy8+O3lqMs4CTb8zAMA00toAvSnLtSyVSaC3cmFrhk36RQyGN6
      7vDu9yvflxoAmYkuTl/qIKY08YvdK1n4TVF0wiNd3LjeScrewp5tS2f7/yrTw5NYgkGc5u+f
      I1DJGW7+eKkBUEiFGYsWKAuUoSyktuEBBplEmHBcxVcexPailtCvKaUAmD9KYrjvIclUmot3
      X34XKJ/PY34FMuyFzHcO7X+Gi599THdMQ5RMeMsbWbtuCT7lKd49rzUGaj6PIZm+nbLzRciO
      8/lnp5jJqUiyjWBDK2uWNONUTN9Z2pvOqfzHP1+Yp4K+2czhLSiQiBmsf/s9frRvG7VKgs/e
      /z3nu76PzmQ5rh/6gHO90YXPSk0QzgfZ/9577N+xBmemn7/84UNuj8fnZPdS4uUwpy9AQZSw
      2hTcioJ7QwWVQQcfnLnMikU/wikYaIUM40P99A5P4q5opLGuEvusa1ohE2dyfIyZlI7HV05l
      pQ89FSUrOYtWIUA+FSNtWHE7TOTiEZIFgUxslP7BJBWtLZRbVMZGBplImWld0krQZcUwdDLx
      KXq77hHWbLS0LiLosSMJGomZCAVJIjk9wuBonFBzGw0VXnKxacKJNJnpCUaUDGbFg99rJ5+Y
      YWJiili6gMXpo7aqAqtZRChkmE6qeJxmIpNjxFQrAYcJSXFjt8oIFOXg4UQOr8/N179qRMmE
      TVGwK3WsC9UQ8pzk2MWbtP1sK6KhEoskUJwOUtNjTKbNNDVVlEx6XzLfqh/gqWulVRila6ao
      abl+8jPO3BolUFFFrPcyHx+9SEbVQI1y6uOPOHd7lHwqwp1rncSB6VtHOdubepDe5K2THGkf
      Rkfl3lcf8e+fnOTuUAyzFOHzP/2FkxfbmUwaCOHbfHCiAwPIRgb44rNjREw+qpwqJw9+Rs9U
      GoMEFz/4Ax8c/YqukThWc46v/voRfUmIjN5jcHKakXud3Lx5k57hMBowfOcKd4ZmKOTTDHV8
      yaGTd8hpQKSbP318iqvnj3LkzBXGoxmGOk5w5OI9ivvqGUT6r3LobOccHqRIVVMr5skxpgGt
      EOboXz/iytlTfHr8AsNTceYuuC4xX3y7CkdQ8JfpTGWgYB2lf8rK7vd2E1QkFtUH+PLDI/TF
      MlRMnGPMt5Zf7VmCRRKKm2cD489Jvnntbt5a5kEwIsTvJGl8ax+NJhEm7dw6MkYamOq5idy8
      lS0ra5EEELMRbt0dpCUQQsDCyh1vsy5gQhB0zOEeIgloXrKRVd2jpJbsYkfLQ3ffxjV7qNNU
      Mpks+eoAJ7+8RCy7BCuQmulluuUtfvpeK06zRHqywLUvu0gVmnGaRAb6hqlr3D4nsZpgs1GG
      QGa2C5Qc72ewdi3v/nIXTotcEry9Ar5li5sjHhOxWECNT5GVA9hnZ5NEs50qn8boTAZxeIzy
      up0Plv893NH9OYWSZ01nBQFJMBVdqSn+G11HB6aGe+mL5/h0rB2AdGSEuNuJboRAkDCb768l
      FpFk4RlyB4PhzgvcHExilnTyhQLRgsr9nVMVTwMbNy4pur5RnCluM1+gfTTN9lqN4QmN1ZsC
      T0398ceWJwZYZh+CpayOzWuX4rKWOj6vim/15LOTg3RlyjlQBkLUjlmfRtcMkAQMXSOdE1Fs
      Jux2G6l0CgNl3ms3xeWlrnI1m5rcD9KWbU4k4Xna+a8tXs8NcOFymLU/2Umlw4xeyHLq2GcP
      DotmG48Zykk2VmxczO+/uk5rLke8cj0h59we48zIIIkyP/fDxWQyIUull/9V8kLfALpWID52
      l08Of0Vw+Ur8EpgdVdgZon+86IKWmRniTlik1mejom054eunGYrkMAyDXCxGBhBFkVQqhY5B
      ITlNV9/zOkXfJFDTQHRoELPTRyAQwC6rzESeJ2yTUOwCkWjq4XlajhwW3G4nFrNIdPAWQ88c
      JBIwVy6nXuzk48N9rFjT8EB9WoiNcbd3jPzXOvN6Ict49xUOn77DkpXLebq6v8BIzx3GIsUg
      LkRH6ewend1su8RCMIfqR8Ykxjn0b79BEkWsznI27PsFDcGiNZxkdrN1xxqOnfiI60jousTy
      7fsot5uR7G28syXJqY9/TwEBbDW8++s9eFtWw0cH+V2nGcnspKqshqDHBgjY/ZX47A+FZ97K
      Mh5o00x2qkI+JKCsaR0bIqf5+A+/Q5BAsJSxYccOBAS8lRU4Hrkzu68SyVxMr2XDFnoOHudf
      O0UCDevZu62JZdXX+eTffosoSQQalrK0qbxY65scVIXUb4zugJXGlhquRnSWeGaPGnlunz7E
      Xed26hsAScGc6eLff9OJKEg4gvXs+OnPqfTZiyZeoplgRcXjrQsqIz13kKUQFV4rhdgInd0C
      1S2VvPx53zeDeZsJ1tU8yXQWi82OxfT4K6NrKqpmPCJyM9A1DVXTkWTTd5pQ09QCqg4m09y3
      SjJ0jUJBQzIV8y5unKGCICGb5rb6qufi5/SKLexf11i8x3gfHx65y44fvU3AtrCfs4lUmnOv
      wBalUChgegW2KAuZb0kK8YJk4xPcam+nPyywdd9eQvbiYvv0zBRxyUa5x7ngozklLdD8UfoC
      e0Fki52Kujaa1lfgtt3/hBJQ/EG+uRKhxOtOqQX4HpJMpbnSPZel9/NLPl/AbH4FznALmG+p
      BXghDLLxSdovfMXtgQiCyc7SzTtY2VTxnawOn5SPmi8gPLIA6FHSOZX/84/n5zG/N5fS5ugv
      ghrj2AefkAqt4z/84z/yt+9tJzHUxVQk8/xrX4gkx/7wL3SF5znZEt+g1AK8CNkJotTxTlsN
      ZlnA7K5iz57K4jE9TzScxBByDPbeI2+rYFFjLS7FhGAYqPk0w73dDE4lqWhcTE3Ii1WW0LUs
      8biK3SETmxwnotsJKknimSzhqTHGChJ2jwenzVySSiwApRbgRbAF8Qm9nDzVTiStYvDINlHZ
      cT797R842t6JZnWTHbjIXz45TTQHWjbKV4c+5NpImopQGd3nDvPZ2TsYQC51j8MfHOHCl59z
      8NQVhifDDHTdZnQ6SnfHVa5evcnQTPJV3/kPllIL8CJIXnb85AA3rlzmT7+7iqu8gW3bNxDy
      2JEB2VLGxl27qZUEjCUtmA7/ic6RBK3CPSbFOn6yezM2SaCh0sEnf7zA6Jal+DCY6uvGvfxd
      /mZ3CzaTiEAlY93D1O7+MW1lr/qmf9iUWoAXxO6vZfP+X/Bf/1e/Yk2tzBcffkRPcWNkBCSk
      +8I/yUqo3EcylSEVjmBxl2GePSY7/FQ7I4zMFNN01yxmw4oWFNPcxIIl5o9SALwIhvFgSyPZ
      5qJl1XZWVZgYmYw84VyVaCSG1WJGtllBLTy41tDyZPIW7DYAAbPZgiR+7acoRcJLoRQAL0Js
      iPPt3cRzGgZg5OOMRzN4nPe3kNUxdMDQiQy2c2PESkuNG2+wksx4D1NpFYDo4F169AB1T90k
      w4LZbBBPJF+Ja92bROkb4EWwe5DDX/Ln/+8UksWEpgks3riPZdUeyCXIpYf55Hf/ih3QRQ9b
      Duyl3CYgWOp5a+MMh//0e0SLiIqDLXv34ABykkIg5EV+rCoys2z9Wo6c+CNdp50s2rKdDc3f
      ZoedEs+jNBP8LdA1lYKqI8ky8v2ZqvQg7/+XS2z9b94lqOmPudjdR8tnSGRVHHYH8nMnzgx0
      VUXVQTaZeFQvmEimOXNrdF7vaS78EMVwpRbgWyBK8tdkzIAgYXPYkCX5qfuZSWYbnjnb2wiI
      soknnW42SRzY2Dz3As8TJTFciadjLmPL/o18h73vSrwC5rkLpJNNZZBsdkylz+sFI5nK0H7v
      5fsy5Qv5Oex99v3Kd24tgKEzdvMkx7vT7Nr7DpXupy0aydJ59iyBbfuonucWyzCKi2gESVr4
      zZrzM5w5epqhWAZRslDe2MbqJU24bKbXYqO6dK7A//6Hs6+6GD8I5lRPG/kIV2/FCTgzdA2M
      8/SxOZ1EOEJ+AbYBNQoZPv3w9/RNPmfzuflATTEaVXjr3Xd5e9d6HOle/vLvf6J9OPrALaLE
      D4M5tQCp8BQZl5tVdQpf9Q1jLK984K1gaAViM5NMzMSRFBNZtfj2FzJJsoYZh82MIIChF0jE
      M9hcLmRUolPD3Ls3jOyrpbmhEodFRlfzJFJpRL3A+FAfM4aHRc31+GwCiWiEdCZDJDzFpJDC
      6vThMuvE0xoOp202kgvEI1kUtxNBzZDMGzisErHpSZKGk6qQGz0bZ6Cni/GERFPbfTe5b9bq
      gihjVRRcisK6YBU1oYt8cfEKi8r3YDdrxCNZbC4b6fAEkxkTLbVlZFMJJsfHSeQMHJ4AFeVe
      zJKImk+TTBUoZKbp7ZvEW9dCtc9KZKSPvpkcTa1LKfdYF75lK/EN5tQCjA/34Q7WE6qqQpsY
      IXy/hjfy9F7+nD8fPMd4OMp4310GwkVHg8jQTQ6duEphtsrMTd3jo6OX0EWdybun+fhYB2Zf
      kMLIRT754ipJvego8cff/YbPT5xnJK6RGbzC+0cug5ah704HI2NT3L5+lQsXLtA/lYZ0HwcP
      tfNQjDzGwX/7nKk8xAba+eDYWdq//JhDxy8xEU2RS01y7JO/0pewEPIafPXZJ9wYTsxhskkk
      WLsIdybCeDYPjHPodx9z9fwJPjh8mrsjYSDNnfPn6RyYIhGb4dqxjzh6cxgDmOo/z+/+879z
      tr0f3aRz4dN/48NPjtIxkkDMhTn42UGmUiVfuFfB81sAPc1Q/xSVO99CtBss88W5PpBhT5OC
      Gu7n7D2Dn/36PQKKjEASfeIgAN5QLcblC0TyKuU2E6ODgwSq67EUwrRfnmLTe79gkVOGlirS
      H/6RnsnVtAhg8tax950DeGwyejhIz4lBMLlYsWk7AxOTLNvxNk3lszOviWcvDI/3XSe24xf8
      fGctillisvMkad9qfrJpGWZRQDFSnL/Tw4qq1c9dmC+YzfhlEzmj+KLGJ4fozbTyy1/vxmmR
      AIPlu/ayTCuQzRdoDUl8dGmI7KpaQMTfuJoD72zELAo4MjNE/OvYvqwSPZdkcuqvZLM5cJQW
      Vb5snhsA6vRdbvQmaPR9xaQIhXSKu1dvsblhPdnwNNaKWoLKN5MxOQOs9BfoGE5R3uJkeHSC
      ug3bIDlCXzRM+vQX3Js9dyocp2IqSksQRLMZ8+wMkiiKCN/BMcJWuYIdaxoe3GR0vJ+BgQmO
      Hh4CIBefYkArRzd4gvXJ1x+ESkLTCM52U5SyarZsWIPr/rb3Wp7BW5fpGkuh6xp6dop0umbW
      71P4/9s70+cmrjUPP61utRZvWiwJW5ZtbPAGIeyBkISQZSY3y+QmuTXz4VbNTNX8M/NH3Jqq
      uWGywGQjgRuWhAsxEEOCCYQYMGDjfd+0tnqbDzLGNoYYOzYTdJ4qf7GkPkd2/855+7zv+R2c
      TmUmbJQUJ65Z7hO2bWOJfORj4eECsHU6225RvnMPG+4WrlSVMdHcwsDEZgKSRFbTsFgglpKc
      1G6p48fTbUyGfAxo1WwOeSCjUuQNUL9pM767H9qyjSK/HyanHt7bR9SC6vXM+YIubzGRiio2
      bVwzk1nd7S6aV4awMInRQUZdbnZP701VFBfOWWu9ib42znVqvPL8LgpdTqTkLT77dhVs2AXL
      4qH/ekuL09Zvs21LPTU1NdM/Dawr89DdP0xRuAx56Da3x7PTzm/DDMfv+phJOMMNRB03uXCy
      Fd+WzRQrEnhLqfNrdI1DaE0Z5WURXCRIpB8eA0sOB17JZjw9yyfNIUMmgWbmKiwH228z9pCR
      tKSsGmOkD5c/RHl5OaXFColEChsJOz3C9Zu9ZOatYFlmlpE7Vzn+TQvRxi0UuhYeMwwtDWoh
      AX8xblWi/04nU5lHPfLUoK+jnYGJaWe4yX5u3Bog+4hXESyeh84AWjqBOxxljXeuB01l7Tou
      jcSRi9bx8u4BjnzyPmddLjz+UopDoVllAh5q1kc4fCbJP781Hbc7vGx65VVOHTvGB60Skm1R
      WFbPi89X47DdhIOBe3UvsptIoAQASVbZ+nQTR099Qdt3DmqeeYs962PURX7k8/3v45Qd+GJh
      KtcEUSVQ3EWE/XNFVRxtYk/DGF8f+AAUB7bk4aln9yFh0NlylHOpTcRqouBQ8VrdfPSXv+CQ
      JLyBCrbtfZ2aaHD6YD+V0jVBZp+OWhyrJ9Z2lP1/vYHikKmoiRIrK8YBqO5iggHPzATmLfIh
      eXIziSTJBIIh3IoM6HS1XUFpKGWNz012vJvLbRJltWsWLIkQLJ/lZ4JtG3PG+e3+AjDbMtFN
      G6ciz00i2Ra6bmBL8vRri2vOMnT0WU5wtmVhGDq2pOBcpKubZeroho1TzR1XZCX7+fLI9+x4
      /Y+UFyz9mcO2TfSsgSQrOJdyevwiiSdSnLrSs2LXfxCGrqM8hmK4lWxXVIMCmYlRhjSbWKT0
      d1FyLJzhfjtEMRzg9gWpfNydEDwWnigBWNk0GdRVOoN4FbB0Uhkbj3euJYpuWFxs71717uRv
      MdyvYNs2ieGbnDr5PYNJE195A/te3E5glU8+SXVd4IKxiX0NvkV/Zuzm93zTFmf3nuepCMwY
      sWNmU1w8dZg+Rz3/+PKmexbtj4CZnuTCj1dZv30HQfcSYth0N80tGfa+1DTHHj2l6fznB2eW
      0CPBfJZ/h9omQ780c+TiMLte+SOvlToZ7rjJZNpYdQGYqQnGDOORPpPov8FE3M/lG11U7Kqb
      +X1m4had7QN0evy8vMT+SLKTQDCIutRknpFmdCwlDs9bQZZ9h5rZJC2XO9ix7x0ay4oAKKvb
      OP2qjZ5JMHDnNh2jBlXr1lFRWozskDCzaZIZAzM9TkdHHwXRdVSWupkc7uVOT4qKxjrKfbnS
      AEtPMdB1m87BDBXr66gIFecK2GybbDrO0OAgSUNGiWewPWCbGvGkQUGR9977Mkl0yUXBAiNx
      WWWM0YE+DLsORcr1e/jWDQpqGykcvlv0Z5DKZPF4PbmiNUtnKqFRUFyIw7ZIjg8zMDKOJXsJ
      r4lQUuDCobgor4zhmV4Rsi2TdHKMvp4RpIIA0fIQLllCS40z2D9CSgdfZA0hXxHK7+4Q8t8n
      y962oiU6SZoVxCIl97+YHePEpwdp6UwR9sFPxz7h5M8D6DaMtZ/jv97/H07/0EZKT3PuqwN8
      fuQ4P90YQE/3cPDgcZKWDXaGs4f/l/MdKcKlKpdPfMG59jFMbDJjt/j844NcuN7D6FAPl6/d
      wbZsbDvB0YMH6BjNpZBsM8P540f4pT++4HfwhGNUawO0J6YXxLLD/NKpsKkxPBN7G4khjp1u
      JqlNj8fxfg4cPEYc0Eev8dHBv9E5MMpgVxvnzl/LHWuUGefrk6eJp3MJsd6fT/HxpyfoHZ+g
      q+0ClzrGsfQMrd+d4HrPEJNjfXx3+FPOXhsRZderxLJnACuVwnQWotx3JZvx9vOMh3fz3r4G
      XDLUVkY4dKiZ0dr3kAFf9WbefH0XMlmC6TGGqp/nhfWlSNoww7e+ZdS2cY220Wmu5519OylU
      JCIlDo6duUSy6llutVwiuOM1XtwQRZZgsmiCE4aEJPtpqC3hVmcf60rXkk2NMZRR2BN6wIZF
      RyFPP+Xj68u91D0bJdXXRSpcRdkiA39raghHbAu7d23A65SxLev+5VRrxrrhFQAACAFJREFU
      gsuXetn52p9oCnuAnMeQJEnsfPVdLNMgq5tUBJ1cuH2bbH1oSc8dgkdj2QKQXCoOYwrLYl5F
      mcFgTz+hWcekKp4Ixd4MU/EMfkB2qtOZVQmH7ER13T0eFRymiQEk+u7QNaxx5pvc6G1oSfon
      M2TiSXo0lS2xu9nZWX2SJNY11NN68gaJbWtJ97ZhBzfgL3jw1y2q24L60TlGt0bo7xgkVrkd
      mcFF/Q2c0Q3ELp7gyFedFBUHqHtqMzWRorlvSvUzqq1hV+RuRjjnKWoZadpbz3NnIguaRiIx
      TtpbI/yAVollC0AtrMDNCcanshT5Zy9VOXB7XGT17MwxqbZtYpigPEKWVHV78IUiNDTFZuK1
      za4C/F4JyTTIWgs9Ikp4Qmtp8v5A6+0h5GsjrH9u78xpjgsihygLm/T0DjIWz9AQDoC2OAHI
      ain73nqbyclJJoa7+OH4UZR3/zQ3t6B6UEmjZ21Q73Uk3X+Fi90OXnxxJz63k/hQOxeuCTPc
      1WLZzwCK209D1E1zcwvjmpkripsYYjRpUd6wgdGr5xlJmdi2yWR3KyNmlEDx4rOY7mgDRRNd
      WAWlxGIxysM+9HQCU/GytsTm5+t96DZYRpr+wbEZ+0FkL407NtJx/DPa7CrqQs7pkddk4M5N
      hqbmHj4qIVEVXUNX2xmm5FpKi+c+LEuShJ7R0G0bsBjq62JsKrcVJzXczUhWIRAuo7ZhAxF1
      isn5OzfVciqCw/z0Sx+Wbece1BMZrEwSqyBAqa8Et9NmsKOTyUetoRMsmeWHQA6F+t2vYl04
      zWf7/xtFkTEo5IU33yAY2siedSf524H9qC6ZlF3Cq2/8AyUqTHiKCJbctRSUcBf7KLybwJKc
      +MJBXJKEo7CSfbu6af7yY87IMqYls377XqKKSv2ze+g9cpT918+hqm7CRV78BfduXE+ogaBy
      GtZVzsTT1lQHR4+eZefb/0K4GNSiUordDpAgFKtEvtJO7Lmm3GnuipdwMFfQJhf4aAraHDrw
      IYpkU+IPEi4L56I+SePsoQ9JWjK2ZeKveYZdfkBX8PtKpn0/FbbufZnmU3/nr5ctsGHDC2+z
      ObqR4I9f8eH+i0iyi2hVOdFgYW5kkj0EApLwr1xBfsNaIBvTWKgozsbQUsTTNkXFXpT5JrCL
      vbploGVNFNU55xq5I091kJ2o80IrMzvJ8cPHadz7FlUBF2DSe+FbWu0aXttZuwT1W+iajuWQ
      UecV9+X6YWA7ZFRFeUhxn0U2oyMpTpzTGxFs0yBrmDgUJ4r86w7R8USKby+tfibYMHQU5TEU
      w61gu09mMZxtM9RxhSu/XEePbOflbdU4HRKYGj29g/jC5RSucpLut0TTNJT7l91WnGw2i6o+
      hlKIFWz3iRXA1HA3IxkXFRWROXX7TwKapiHLq1/vZBjGYxHeSrb7ZArgCedxlUM/ie0+YWOj
      QPBoCAH8DnEscSFBtHs/IgQS5DViBhDkNUIAgrxGCECQ1wgBCO7Dti3+Xz8Z/oZWkr/fdKhg
      RRju+InWq51oio+mrVuoDS+0h8JktPMaV24PYN69D90RntuzkSWv1tsmo9036U0W0tgY5UGF
      D7Y2TkvzWQaTFqHqDWxpWotHWfruOTEDCKaxyQxc4suT14k0bGVjhYuzh4/QmVhgj7Wdof2H
      nzGDFdTW1uZ+qiK/bjD8ADIT/fz9qwN8cuxbrlzt4UHFsJY2zumvvmDUW8u2bZvJtDdz4uLt
      Je+dSIx0ihlAMI2V5ufmS1TvfZdNtcVIRHHGu/mutYeK56vn3ihahgFdZWttNZWFy8/Qxoe6
      8dQ+y3u7E5w9+eC9EBN9N7llxvjXXfUoEoT37uCDQ1eZ2FGLfwmTwORgv5gBBNOkp7g55aU+
      VjBdjeqgtKEeR1cX832Ls5kMUxgo6TTxeALNsJa1g6103XZ2NlX9aigzMTRCsLxieqaRUANR
      1rrG6V2iCXd54zNiBhBMY5lohUX4ZrlRSKqKlU6gGzDbndfGgd+RoOXMaWQrw0RGpumZF9he
      G1pS09IiM72GLVFU4GGm1tyhoCpJEinAv7R2hQAEM0i6jj5vLHc4ZOY7tKglEf7w7p9zzhW2
      TWLoBl8cOkLkP/6N2Aru5JdsC90wc4c0zvRJvs+Q+VEQIZAgh+rCl0kxNuuZ15qYIFvsR503
      TEqSA8WpoqoqqstFoKKWjaVJ7oysbBddXpXUVPLeL4wUE8kifAs48iwWIQBBDtXHlkaJc803
      SRs2ljZFa8tVyjbV45FsMvExBkZzzhzJ0W5u3BlCn14DTY33cmu8hMqlRUAPwSY9OcLgeG6D
      dai8msnuywwmDWzbYuj6Ffp8lVQtwzhaFMMJZrAzoxw+eJABswCnmcFR2sg7bzxHoWLSffE4
      3/SH+Pc3tpEcuc3pk2foj1u43TKJuEZ08wv84Zn1SxhRk/x07DgXukYw9TjDQwahqJ/C8ib+
      6aVtDP94hHNaI39+qQGsLN2t3/DF+X58xU7SGYmdr77J05WL94K9xxTfHzoqBCCYi22ZJMaH
      0V0BfAXqffH/bIxshqxh4XR5cM43Z1pB9NQkY0mTQDCAc5kxjBCAIK8RzwCCvEYIQJDXCAEI
      8hohAEFeIwQgyGuEAAR5jRCAIK8RAhDkNUIAgrxGCECQ1wgBCPIaIQBBXiMEIMhrhAAEeY0Q
      gCCvEQIQ5DVCAIK8RghAkNcIAQjyGiEAQV4jBCDIa4QABHmNEIAgrxECEOQ1/wcClqi6gRYs
      ywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Genres vs worldwide gross' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Language vs number of movies' width='192'>
      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
      S5b9/xNOdtS/7Yu4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Studio vs worldwide gross' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='movie analysis visualizations' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
